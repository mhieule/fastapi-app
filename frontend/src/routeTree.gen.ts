/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SignupImport } from './routes/signup'
import { Route as ResetPasswordImport } from './routes/reset-password'
import { Route as RecoverPasswordImport } from './routes/recover-password'
import { Route as LoginImport } from './routes/login'
import { Route as LayoutImport } from './routes/_layout'
import { Route as LayoutIndexImport } from './routes/_layout/index'
import { Route as LayoutTransferPlannerImport } from './routes/_layout/transfer-planner'
import { Route as LayoutTeamOfTheWeekImport } from './routes/_layout/team-of-the-week'
import { Route as LayoutSettingsImport } from './routes/_layout/settings'
import { Route as LayoutOptimizedTeamImport } from './routes/_layout/optimized-team'
import { Route as LayoutLiverankingImport } from './routes/_layout/live_ranking'
import { Route as LayoutLivepointsImport } from './routes/_layout/live_points'
import { Route as LayoutItemsImport } from './routes/_layout/items'
import { Route as LayoutFeedImport } from './routes/_layout/feed'
import { Route as LayoutAdminImport } from './routes/_layout/admin'

// Create/Update Routes

const SignupRoute = SignupImport.update({
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const ResetPasswordRoute = ResetPasswordImport.update({
  path: '/reset-password',
  getParentRoute: () => rootRoute,
} as any)

const RecoverPasswordRoute = RecoverPasswordImport.update({
  path: '/recover-password',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const LayoutIndexRoute = LayoutIndexImport.update({
  path: '/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutTransferPlannerRoute = LayoutTransferPlannerImport.update({
  path: '/transfer-planner',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutTeamOfTheWeekRoute = LayoutTeamOfTheWeekImport.update({
  path: '/team-of-the-week',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutSettingsRoute = LayoutSettingsImport.update({
  path: '/settings',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutOptimizedTeamRoute = LayoutOptimizedTeamImport.update({
  path: '/optimized-team',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutLiverankingRoute = LayoutLiverankingImport.update({
  path: '/live_ranking',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutLivepointsRoute = LayoutLivepointsImport.update({
  path: '/live_points',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutItemsRoute = LayoutItemsImport.update({
  path: '/items',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutFeedRoute = LayoutFeedImport.update({
  path: '/feed',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutAdminRoute = LayoutAdminImport.update({
  path: '/admin',
  getParentRoute: () => LayoutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_layout': {
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/recover-password': {
      preLoaderRoute: typeof RecoverPasswordImport
      parentRoute: typeof rootRoute
    }
    '/reset-password': {
      preLoaderRoute: typeof ResetPasswordImport
      parentRoute: typeof rootRoute
    }
    '/signup': {
      preLoaderRoute: typeof SignupImport
      parentRoute: typeof rootRoute
    }
    '/_layout/admin': {
      preLoaderRoute: typeof LayoutAdminImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/feed': {
      preLoaderRoute: typeof LayoutFeedImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/items': {
      preLoaderRoute: typeof LayoutItemsImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/live_points': {
      preLoaderRoute: typeof LayoutLivepointsImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/live_ranking': {
      preLoaderRoute: typeof LayoutLiverankingImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/optimized-team': {
      preLoaderRoute: typeof LayoutOptimizedTeamImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/settings': {
      preLoaderRoute: typeof LayoutSettingsImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/team-of-the-week': {
      preLoaderRoute: typeof LayoutTeamOfTheWeekImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/transfer-planner': {
      preLoaderRoute: typeof LayoutTransferPlannerImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/': {
      preLoaderRoute: typeof LayoutIndexImport
      parentRoute: typeof LayoutImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  LayoutRoute.addChildren([
    LayoutAdminRoute,
    LayoutFeedRoute,
    LayoutItemsRoute,
    LayoutLivepointsRoute,
    LayoutLiverankingRoute,
    LayoutOptimizedTeamRoute,
    LayoutSettingsRoute,
    LayoutTeamOfTheWeekRoute,
    LayoutTransferPlannerRoute,
    LayoutIndexRoute,
  ]),
  LoginRoute,
  RecoverPasswordRoute,
  ResetPasswordRoute,
  SignupRoute,
])

/* prettier-ignore-end */
